plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDepMgmtVersion}"
    id 'java'
    id 'war'
}

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

version projectVersion
group projectGroup

repositories {
    mavenLocal()
    // If using a Maven proxy, put the property settings in
    // ~/.gradle/gradle.properties for defaultCentral_proxy_url,
    // default_proxy_username and default_proxy_password.
    if (project.hasProperty("defaultCentral_proxy_url")) {
        maven {
            url project.property("defaultCentral_proxy_url")
            credentials {
                username project.property("default_proxy_username")
                password project.property("default_proxy_password")
            }
        }
    } else {
        mavenCentral()
    }
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
}

ext["tomcat.version"] = tomcatVersion

dependencies {
    implementation project(":bidms-developer-cas-server-webapp")
    implementation "org.apereo.cas:cas-server-webapp-starter-tomcat:$casVersion"
}

tasks.named("bootWar") {
    launchScript()
}

tasks.named("bootJar") {
    launchScript()
}

springBoot {
    mainClass = "org.apereo.cas.web.CasWebApplication"
}

tasks.named("bootRun") {
    def casDir = project.hasProperty("casDir") ? project.getProperty("casDir") : "${projectDir}/cas"
    jvmArgs = [
            "-Dserver.contextPath=/cas",
            "-Dserver.port=8060",
            "-Dserver.ssl.keyStore=${casDir}/testkeystore.jks",
            "-Dserver.ssl.keyStorePassword=changeit",
            "-Dserver.ssl.keyPassword=changeit",
            "-Djavax.net.ssl.trustStore=${casDir}/testtruststore.jks",
            "-Djavax.net.ssl.trustStorePassword=changeit",
            "-Dlogging.config=classpath:log4j2.xml",
            "-Dcas.standalone.configuration-directory=${casDir}",
            "-Dcas.standalone.configuration-file=${casDir}/cas_config.yml",
            "-Dcas.service-registry.yaml.location=file:${casDir}/services"
    ]
}
